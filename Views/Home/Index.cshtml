@using X.PagedList
@using X.PagedList.Mvc.Core
@model Homework_SkillTree.Models.TransactionViewModel
@{
    ViewData["Title"] = "Home Page";

    string GetCategory(string category, string type = "class")
    {
        switch (type.ToLower())
        {
            case "name":
                return category == "0" ? "支出" : "收入";
            case "class":
            default:
                return category == "0" ? "expense" : "income";
        }
    }

    string GetSortIcon(string column)
    {
        if (Model.SortColumn == column)
        {
            return Model.SortOrder == "asc" ? "▲" : "▼";
        }
        return "";
    }

    string GetSortOrder(string column)
    {
        if (Model.SortColumn == column)
        {
            return Model.SortOrder == "asc" ? "desc" : "asc";
        }
        return "asc";
    }
}

<style>
    .expense {
        color: red;
    }
    .income {
        color: blue;
    }
</style>

<div class="container mt-4">
    <div class="card bg-light">
        <div class="card-body">
            <form asp-action="Index" method="post">
                <div class="row mb-3">
                    <label for="category" class="col-sm-2 col-form-label">類別</label>
                    <div class="col-sm-10">
                        <select id="category" class="form-select" asp-for="FormModel.Category">
                            <option value="" selected>請選擇</option>
                            <option value="0">支出</option>
                            <option value="1">收入</option>
                            </select>
                            <span asp-validation-for="FormModel.Category" class="text-danger"></span>
                    </div>
                </div>
                <div class="row mb-3">
                    <label for="money" class="col-sm-2 col-form-label">金額</label>
                    <div class="col-sm-10">
                        <input type="number" class="form-control" id="money" placeholder="金額" asp-for="FormModel.Money">
                            <span asp-validation-for="FormModel.Money" class="text-danger"></span>

                    </div>
                </div>
                <div class="row mb-3">
                    <label for="date" class="col-sm-2 col-form-label">日期</label>
                    <div class="col-sm-10">
                        <input type="date" class="form-control" id="date" placeholder="日期" asp-for="FormModel.Date">
                            <span asp-validation-for="FormModel.Date" class="text-danger"></span>

                    </div>
                </div>
                <div class="row mb-3">
                    <label for="description" class="col-sm-2 col-form-label">備註</label>
                    <div class="col-sm-10">
                        <textarea class="form-control" id="description" rows="3" asp-for="FormModel.Description"></textarea>
                        </div>
                </div>
                <div class="row">
                    <div class="col-sm-10 offset-sm-2">
                        <button type="submit" class="btn btn-primary">送出</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            <table class="table table-bordered table-hover">
                <thead class="table-light">
                    <tr>
                        <th>#</th>
                        <th>
                            <a href="@Url.Action("Index", new { sortColumn = "Category", sortOrder = GetSortOrder("Category") })" class="text-dark text-decoration-none">
                                類別 @GetSortIcon("Category")
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("Index", new { sortColumn = "Money", sortOrder = GetSortOrder("Money") })" class="text-dark text-decoration-none">
                                金額 @GetSortIcon("Money")
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("Index", new { sortColumn = "Date", sortOrder = GetSortOrder("Date") })" class="text-dark text-decoration-none">
                                日期 @GetSortIcon("Date")
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Transactions != null && Model.Transactions.Any())
                    {
                        foreach (var transaction in Model.Transactions)
                        {
                            
                            <tr>
                                <td>@((Model.Transactions.PageNumber - 1) * Model.Transactions.PageSize + Model.Transactions.ToList().IndexOf(transaction) + 1)</td>
                                <td>
                                    <span class="@GetCategory(transaction.Category)">
                                        @GetCategory(transaction.Category, "name")
                                    </span>
                                </td>
                                <td>@(transaction.Money?.ToString("###,###,###.##") ?? "0")</td>
                                <td>@(transaction.Date?.ToString("yyyy-MM-dd") ?? "")</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4">目前沒有交易資料</td>
                        </tr>
                    }
                </tbody>
            </table>

            @* X.PagedList 分頁 *@
            @if (Model.Transactions != null && Model.Transactions.Any())
            {
                @Html.PagedListPager(Model.Transactions,
                         page => Url.Action("Index", new { page, sortColumn = Model.SortColumn, sortOrder = Model.SortOrder }),
                         new PagedListRenderOptions
            {
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
                UlElementClasses = new[] { "pagination", "justify-content-center" },
                MaximumPageNumbersToDisplay = 5,
                LinkToFirstPageFormat = "第一頁",
                LinkToPreviousPageFormat = "上一頁",
                LinkToNextPageFormat = "下一頁",
                LinkToLastPageFormat = "最後頁"
            })
            }
        </div>
    </div>


</div>
